name: Deploy artifacts

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  deploy-cuttlefish-cvdremote-amd64-debian-package:
    if: github.repository_owner == 'google'
    environment: deployment
    runs-on: ubuntu-24.04
    container:
      image: debian@sha256:9258a75a7e4323c9e5562b361effc84ee747920116d8adfc98a465a5cdc9150e # debian:bookworm-20250407 (amd64)
    steps:
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Build debian package cuttlefish-cvdremote
      uses: ./.github/actions/build-cuttlefish-cvdremote-debian-package
    - name: Get exact filename
      run: echo "path=$(find . -name cuttlefish-cvdremote_*.deb)" >> $GITHUB_ENV
    - name: Authentication on GCP project android-cuttlefish-artifacts
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.ARTIFACT_REGISTRY_UPLOADER }}'
    - name: Deploy debian package cuttlefish-cvdremote
      uses: ./.github/actions/deploy-cuttlefish-cvdremote-debian-package
      with:
        path: ${{ env.path }}

  deploy-cuttlefish-cvdremote-arm64-debian-package:
    if: github.repository_owner == 'google'
    environment: deployment
    runs-on: ubuntu-24.04-arm
    container:
      image: debian@sha256:00cd074b40c4d99ff0c24540bdde0533ca3791edcdac0de36d6b9fb3260d89e2 # debian:bookworm-20250407 (arm64/v8)
    steps:
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Build debian package cuttlefish-cvdremote
      uses: ./.github/actions/build-cuttlefish-cvdremote-debian-package
    - name: Get exact filename
      run: echo "path=$(find . -name cuttlefish-cvdremote_*.deb)" >> $GITHUB_ENV
    - name: Authentication on GCP project android-cuttlefish-artifacts
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.ARTIFACT_REGISTRY_UPLOADER }}'
    - name: Deploy debian package cuttlefish-cvdremote
      uses: ./.github/actions/deploy-cuttlefish-cvdremote-debian-package
      with:
        path: ${{ env.path }}

  deploy-cuttlefish-cloud-orchestrator-amd64-docker-image:
    if: github.repository_owner == 'google'
    environment: deployment
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Build docker image
      run: docker build -t cuttlefish-cloud-orchestrator .
    - name: Authentication on GCP project android-cuttlefish-artifacts
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.ARTIFACT_REGISTRY_UPLOADER }}'
    - name: Login to Artifact Registry
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # aka v3.5.0
      with:
        registry: us-docker.pkg.dev
        username: _json_key
        password: '${{ secrets.ARTIFACT_REGISTRY_UPLOADER }}'
    - name: Deploy docker image
      uses: ./.github/actions/deploy-cuttlefish-cloud-orchestrator-docker-image
      with:
        arch: amd64

  deploy-cuttlefish-cloud-orchestrator-arm64-docker-image:
    if: github.repository_owner == 'google'
    environment: deployment
    runs-on: ubuntu-24.04-arm
    steps:
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Build docker image
      run: docker build -t cuttlefish-cloud-orchestrator .
    - name: Authentication on GCP project android-cuttlefish-artifacts
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.ARTIFACT_REGISTRY_UPLOADER }}'
    - name: Login to Artifact Registry
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # aka v3.5.0
      with:
        registry: us-docker.pkg.dev
        username: _json_key
        password: '${{ secrets.ARTIFACT_REGISTRY_UPLOADER }}'
    - name: Deploy docker image
      uses: ./.github/actions/deploy-cuttlefish-cloud-orchestrator-docker-image
      with:
        arch: arm64

  deploy-cuttlefish-cloud-orchestrator-docker-manifest:
    if: github.repository_owner == 'google'
    needs: [deploy-cuttlefish-cloud-orchestrator-amd64-docker-image, deploy-cuttlefish-cloud-orchestrator-arm64-docker-image]
    environment: deployment
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@a81bbbf8298c0fa03ea29cdc473d45769f953675 # aka v2
    - name: Authentication on GCP project android-cuttlefish-artifacts
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.ARTIFACT_REGISTRY_UPLOADER }}'
    - name: Login to Artifact Registry
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # aka v3.5.0
      with:
        registry: us-docker.pkg.dev
        username: _json_key
        password: '${{ secrets.ARTIFACT_REGISTRY_UPLOADER }}'
    - name: Deploy manifests
      run: |
        # TODO(b/440196950): Setup condition on this step when we build
        # stable/unstable versions here too.

        # Stable/Unstable version tag : X.Y.Z
        # Nightly version tag         : gitYYYYMMDD-<Github SHA 8 digit>
        DATE=$(date -u +'%Y%m%d')
        SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)
        TAG="git${DATE}-${SHORT_SHA}"
        IMAGE=us-docker.pkg.dev/android-cuttlefish-artifacts/cuttlefish-orchestration/cuttlefish-cloud-orchestrator

        for MANIFEST_TAG in ${TAG} nightly; do
          docker manifest create ${IMAGE}:${MANIFEST_TAG} \
            --amend ${IMAGE}:${TAG}-amd64 \
            --amend ${IMAGE}:${TAG}-arm64
          docker manifest push ${IMAGE}:${MANIFEST_TAG}
