//
// Copyright (C) 2024 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: load_config.proto

package cli

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnvironmentSpecification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instances     []*Instance            `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
	Fetch         *Fetch                 `protobuf:"bytes,2,opt,name=fetch,proto3,oneof" json:"fetch,omitempty"`
	Metrics       *Metrics               `protobuf:"bytes,3,opt,name=metrics,proto3,oneof" json:"metrics,omitempty"`
	Common        *Common                `protobuf:"bytes,4,opt,name=common,proto3,oneof" json:"common,omitempty"`
	NetsimBt      *bool                  `protobuf:"varint,5,opt,name=netsim_bt,json=netsimBt,proto3,oneof" json:"netsim_bt,omitempty"`
	NetsimUwb     *bool                  `protobuf:"varint,6,opt,name=netsim_uwb,json=netsimUwb,proto3,oneof" json:"netsim_uwb,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnvironmentSpecification) Reset() {
	*x = EnvironmentSpecification{}
	mi := &file_load_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvironmentSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentSpecification) ProtoMessage() {}

func (x *EnvironmentSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentSpecification.ProtoReflect.Descriptor instead.
func (*EnvironmentSpecification) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{0}
}

func (x *EnvironmentSpecification) GetInstances() []*Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *EnvironmentSpecification) GetFetch() *Fetch {
	if x != nil {
		return x.Fetch
	}
	return nil
}

func (x *EnvironmentSpecification) GetMetrics() *Metrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *EnvironmentSpecification) GetCommon() *Common {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *EnvironmentSpecification) GetNetsimBt() bool {
	if x != nil && x.NetsimBt != nil {
		return *x.NetsimBt
	}
	return false
}

func (x *EnvironmentSpecification) GetNetsimUwb() bool {
	if x != nil && x.NetsimUwb != nil {
		return *x.NetsimUwb
	}
	return false
}

type Common struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupName     *string                `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3,oneof" json:"group_name,omitempty"`
	HostPackage   *string                `protobuf:"bytes,2,opt,name=host_package,json=hostPackage,proto3,oneof" json:"host_package,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Common) Reset() {
	*x = Common{}
	mi := &file_load_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Common) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Common) ProtoMessage() {}

func (x *Common) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Common.ProtoReflect.Descriptor instead.
func (*Common) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{1}
}

func (x *Common) GetGroupName() string {
	if x != nil && x.GroupName != nil {
		return *x.GroupName
	}
	return ""
}

func (x *Common) GetHostPackage() string {
	if x != nil && x.HostPackage != nil {
		return *x.HostPackage
	}
	return ""
}

type Fetch struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ApiKey                 *string                `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3,oneof" json:"api_key,omitempty"`
	CredentialSource       *string                `protobuf:"bytes,2,opt,name=credential_source,json=credentialSource,proto3,oneof" json:"credential_source,omitempty"`
	WaitRetryPeriodSeconds *uint32                `protobuf:"varint,3,opt,name=wait_retry_period_seconds,json=wait_retry_period,proto3,oneof" json:"wait_retry_period_seconds,omitempty"`
	KeepDownloadedArchives *bool                  `protobuf:"varint,5,opt,name=keep_downloaded_archives,json=keepDownloadedArchives,proto3,oneof" json:"keep_downloaded_archives,omitempty"`
	ApiBaseUrl             *string                `protobuf:"bytes,6,opt,name=api_base_url,json=apiBaseUrl,proto3,oneof" json:"api_base_url,omitempty"`
	ProjectId              *string                `protobuf:"bytes,7,opt,name=project_id,json=projectId,proto3,oneof" json:"project_id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Fetch) Reset() {
	*x = Fetch{}
	mi := &file_load_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fetch) ProtoMessage() {}

func (x *Fetch) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fetch.ProtoReflect.Descriptor instead.
func (*Fetch) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{2}
}

func (x *Fetch) GetApiKey() string {
	if x != nil && x.ApiKey != nil {
		return *x.ApiKey
	}
	return ""
}

func (x *Fetch) GetCredentialSource() string {
	if x != nil && x.CredentialSource != nil {
		return *x.CredentialSource
	}
	return ""
}

func (x *Fetch) GetWaitRetryPeriodSeconds() uint32 {
	if x != nil && x.WaitRetryPeriodSeconds != nil {
		return *x.WaitRetryPeriodSeconds
	}
	return 0
}

func (x *Fetch) GetKeepDownloadedArchives() bool {
	if x != nil && x.KeepDownloadedArchives != nil {
		return *x.KeepDownloadedArchives
	}
	return false
}

func (x *Fetch) GetApiBaseUrl() string {
	if x != nil && x.ApiBaseUrl != nil {
		return *x.ApiBaseUrl
	}
	return ""
}

func (x *Fetch) GetProjectId() string {
	if x != nil && x.ProjectId != nil {
		return *x.ProjectId
	}
	return ""
}

type Instance struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Name         *string                `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Vm           *Vm                    `protobuf:"bytes,2,opt,name=vm,proto3,oneof" json:"vm,omitempty"`
	Boot         *Boot                  `protobuf:"bytes,3,opt,name=boot,proto3,oneof" json:"boot,omitempty"`
	Security     *Security              `protobuf:"bytes,4,opt,name=security,proto3,oneof" json:"security,omitempty"`
	Disk         *Disk                  `protobuf:"bytes,5,opt,name=disk,proto3,oneof" json:"disk,omitempty"`
	Graphics     *Graphics              `protobuf:"bytes,6,opt,name=graphics,proto3,oneof" json:"graphics,omitempty"`
	Streaming    *Streaming             `protobuf:"bytes,7,opt,name=streaming,proto3,oneof" json:"streaming,omitempty"`
	Connectivity *Connectivity          `protobuf:"bytes,8,opt,name=connectivity,proto3,oneof" json:"connectivity,omitempty"`
	// TODO: b/337089452 - handle outside of proto logic
	ImportTemplate *string `protobuf:"bytes,9,opt,name=import_template,json=@import,proto3,oneof" json:"import_template,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Instance) Reset() {
	*x = Instance{}
	mi := &file_load_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{3}
}

func (x *Instance) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Instance) GetVm() *Vm {
	if x != nil {
		return x.Vm
	}
	return nil
}

func (x *Instance) GetBoot() *Boot {
	if x != nil {
		return x.Boot
	}
	return nil
}

func (x *Instance) GetSecurity() *Security {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *Instance) GetDisk() *Disk {
	if x != nil {
		return x.Disk
	}
	return nil
}

func (x *Instance) GetGraphics() *Graphics {
	if x != nil {
		return x.Graphics
	}
	return nil
}

func (x *Instance) GetStreaming() *Streaming {
	if x != nil {
		return x.Streaming
	}
	return nil
}

func (x *Instance) GetConnectivity() *Connectivity {
	if x != nil {
		return x.Connectivity
	}
	return nil
}

func (x *Instance) GetImportTemplate() string {
	if x != nil && x.ImportTemplate != nil {
		return *x.ImportTemplate
	}
	return ""
}

type Boot struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Kernel              *Build                 `protobuf:"bytes,1,opt,name=kernel,proto3,oneof" json:"kernel,omitempty"`
	EnableBootanimation *bool                  `protobuf:"varint,2,opt,name=enable_bootanimation,json=enableBootanimation,proto3,oneof" json:"enable_bootanimation,omitempty"`
	ExtraBootconfigArgs *string                `protobuf:"bytes,3,opt,name=extra_bootconfig_args,json=extraBootconfigArgs,proto3,oneof" json:"extra_bootconfig_args,omitempty"`
	Build               *string                `protobuf:"bytes,4,opt,name=build,proto3,oneof" json:"build,omitempty"`
	Bootloader          *Build                 `protobuf:"bytes,5,opt,name=bootloader,proto3,oneof" json:"bootloader,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Boot) Reset() {
	*x = Boot{}
	mi := &file_load_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Boot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boot) ProtoMessage() {}

func (x *Boot) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boot.ProtoReflect.Descriptor instead.
func (*Boot) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{4}
}

func (x *Boot) GetKernel() *Build {
	if x != nil {
		return x.Kernel
	}
	return nil
}

func (x *Boot) GetEnableBootanimation() bool {
	if x != nil && x.EnableBootanimation != nil {
		return *x.EnableBootanimation
	}
	return false
}

func (x *Boot) GetExtraBootconfigArgs() string {
	if x != nil && x.ExtraBootconfigArgs != nil {
		return *x.ExtraBootconfigArgs
	}
	return ""
}

func (x *Boot) GetBuild() string {
	if x != nil && x.Build != nil {
		return *x.Build
	}
	return ""
}

func (x *Boot) GetBootloader() *Build {
	if x != nil {
		return x.Bootloader
	}
	return nil
}

type Build struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Build         *string                `protobuf:"bytes,1,opt,name=build,proto3,oneof" json:"build,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Build) Reset() {
	*x = Build{}
	mi := &file_load_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Build) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Build) ProtoMessage() {}

func (x *Build) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Build.ProtoReflect.Descriptor instead.
func (*Build) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{5}
}

func (x *Build) GetBuild() string {
	if x != nil && x.Build != nil {
		return *x.Build
	}
	return ""
}

type Connectivity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vsock         *Vsock                 `protobuf:"bytes,1,opt,name=vsock,proto3,oneof" json:"vsock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Connectivity) Reset() {
	*x = Connectivity{}
	mi := &file_load_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Connectivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connectivity) ProtoMessage() {}

func (x *Connectivity) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connectivity.ProtoReflect.Descriptor instead.
func (*Connectivity) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{6}
}

func (x *Connectivity) GetVsock() *Vsock {
	if x != nil {
		return x.Vsock
	}
	return nil
}

type Vsock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GuestGroup    *string                `protobuf:"bytes,1,opt,name=guest_group,json=guestGroup,proto3,oneof" json:"guest_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vsock) Reset() {
	*x = Vsock{}
	mi := &file_load_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vsock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vsock) ProtoMessage() {}

func (x *Vsock) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vsock.ProtoReflect.Descriptor instead.
func (*Vsock) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{7}
}

func (x *Vsock) GetGuestGroup() string {
	if x != nil && x.GuestGroup != nil {
		return *x.GuestGroup
	}
	return ""
}

type Graphics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Displays      []*Display             `protobuf:"bytes,1,rep,name=displays,proto3" json:"displays,omitempty"`
	RecordScreen  *bool                  `protobuf:"varint,2,opt,name=record_screen,json=recordScreen,proto3,oneof" json:"record_screen,omitempty"`
	GpuMode       *string                `protobuf:"bytes,3,opt,name=gpu_mode,json=gpuMode,proto3,oneof" json:"gpu_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Graphics) Reset() {
	*x = Graphics{}
	mi := &file_load_config_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Graphics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Graphics) ProtoMessage() {}

func (x *Graphics) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Graphics.ProtoReflect.Descriptor instead.
func (*Graphics) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{8}
}

func (x *Graphics) GetDisplays() []*Display {
	if x != nil {
		return x.Displays
	}
	return nil
}

func (x *Graphics) GetRecordScreen() bool {
	if x != nil && x.RecordScreen != nil {
		return *x.RecordScreen
	}
	return false
}

func (x *Graphics) GetGpuMode() string {
	if x != nil && x.GpuMode != nil {
		return *x.GpuMode
	}
	return ""
}

type Display struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Width            *uint32                `protobuf:"varint,1,opt,name=width,proto3,oneof" json:"width,omitempty"`
	Height           *uint32                `protobuf:"varint,2,opt,name=height,proto3,oneof" json:"height,omitempty"`
	Dpi              *uint32                `protobuf:"varint,3,opt,name=dpi,proto3,oneof" json:"dpi,omitempty"`
	RefreshRateHertz *uint32                `protobuf:"varint,4,opt,name=refresh_rate_hertz,json=refreshRateHertz,proto3,oneof" json:"refresh_rate_hertz,omitempty"`
	Overlays         []*DisplayOverlay      `protobuf:"bytes,5,rep,name=overlays,proto3" json:"overlays,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Display) Reset() {
	*x = Display{}
	mi := &file_load_config_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Display) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Display) ProtoMessage() {}

func (x *Display) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Display.ProtoReflect.Descriptor instead.
func (*Display) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{9}
}

func (x *Display) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Display) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Display) GetDpi() uint32 {
	if x != nil && x.Dpi != nil {
		return *x.Dpi
	}
	return 0
}

func (x *Display) GetRefreshRateHertz() uint32 {
	if x != nil && x.RefreshRateHertz != nil {
		return *x.RefreshRateHertz
	}
	return 0
}

func (x *Display) GetOverlays() []*DisplayOverlay {
	if x != nil {
		return x.Overlays
	}
	return nil
}

type Disk struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	DefaultBuild           *string                `protobuf:"bytes,1,opt,name=default_build,json=defaultBuild,proto3,oneof" json:"default_build,omitempty"`
	SuperPartition         *Super                 `protobuf:"bytes,2,opt,name=super_partition,json=super,proto3,oneof" json:"super_partition,omitempty"`
	DownloadImgZip         *bool                  `protobuf:"varint,3,opt,name=download_img_zip,json=downloadImgZip,proto3,oneof" json:"download_img_zip,omitempty"`
	DownloadTargetFilesZip *bool                  `protobuf:"varint,4,opt,name=download_target_files_zip,json=downloadTargetFilesZip,proto3,oneof" json:"download_target_files_zip,omitempty"`
	BlankDataImageMb       *uint32                `protobuf:"varint,5,opt,name=blank_data_image_mb,json=blankDataImageMb,proto3,oneof" json:"blank_data_image_mb,omitempty"`
	Otatools               *string                `protobuf:"bytes,6,opt,name=otatools,proto3,oneof" json:"otatools,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Disk) Reset() {
	*x = Disk{}
	mi := &file_load_config_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disk) ProtoMessage() {}

func (x *Disk) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disk.ProtoReflect.Descriptor instead.
func (*Disk) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{10}
}

func (x *Disk) GetDefaultBuild() string {
	if x != nil && x.DefaultBuild != nil {
		return *x.DefaultBuild
	}
	return ""
}

func (x *Disk) GetSuperPartition() *Super {
	if x != nil {
		return x.SuperPartition
	}
	return nil
}

func (x *Disk) GetDownloadImgZip() bool {
	if x != nil && x.DownloadImgZip != nil {
		return *x.DownloadImgZip
	}
	return false
}

func (x *Disk) GetDownloadTargetFilesZip() bool {
	if x != nil && x.DownloadTargetFilesZip != nil {
		return *x.DownloadTargetFilesZip
	}
	return false
}

func (x *Disk) GetBlankDataImageMb() uint32 {
	if x != nil && x.BlankDataImageMb != nil {
		return *x.BlankDataImageMb
	}
	return 0
}

func (x *Disk) GetOtatools() string {
	if x != nil && x.Otatools != nil {
		return *x.Otatools
	}
	return ""
}

type Super struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	System        *string                `protobuf:"bytes,1,opt,name=system,proto3,oneof" json:"system,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Super) Reset() {
	*x = Super{}
	mi := &file_load_config_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Super) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Super) ProtoMessage() {}

func (x *Super) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Super.ProtoReflect.Descriptor instead.
func (*Super) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{11}
}

func (x *Super) GetSystem() string {
	if x != nil && x.System != nil {
		return *x.System
	}
	return ""
}

type Security struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	SerialNumber         *string                `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3,oneof" json:"serial_number,omitempty"`
	UseRandomSerial      *bool                  `protobuf:"varint,2,opt,name=use_random_serial,json=useRandomSerial,proto3,oneof" json:"use_random_serial,omitempty"`
	GuestEnforceSecurity *bool                  `protobuf:"varint,3,opt,name=guest_enforce_security,json=guestEnforceSecurity,proto3,oneof" json:"guest_enforce_security,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Security) Reset() {
	*x = Security{}
	mi := &file_load_config_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Security) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Security) ProtoMessage() {}

func (x *Security) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Security.ProtoReflect.Descriptor instead.
func (*Security) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{12}
}

func (x *Security) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

func (x *Security) GetUseRandomSerial() bool {
	if x != nil && x.UseRandomSerial != nil {
		return *x.UseRandomSerial
	}
	return false
}

func (x *Security) GetGuestEnforceSecurity() bool {
	if x != nil && x.GuestEnforceSecurity != nil {
		return *x.GuestEnforceSecurity
	}
	return false
}

type Streaming struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      *string                `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Streaming) Reset() {
	*x = Streaming{}
	mi := &file_load_config_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Streaming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Streaming) ProtoMessage() {}

func (x *Streaming) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Streaming.ProtoReflect.Descriptor instead.
func (*Streaming) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{13}
}

func (x *Streaming) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

type Vm struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Cpus            *uint32                `protobuf:"varint,1,opt,name=cpus,proto3,oneof" json:"cpus,omitempty"`
	MemoryMb        *uint32                `protobuf:"varint,2,opt,name=memory_mb,json=memoryMb,proto3,oneof" json:"memory_mb,omitempty"`
	UseSdcard       *bool                  `protobuf:"varint,3,opt,name=use_sdcard,json=useSdcard,proto3,oneof" json:"use_sdcard,omitempty"`
	SetupwizardMode *string                `protobuf:"bytes,4,opt,name=setupwizard_mode,json=setupwizardMode,proto3,oneof" json:"setupwizard_mode,omitempty"`
	Uuid            *string                `protobuf:"bytes,5,opt,name=uuid,proto3,oneof" json:"uuid,omitempty"`
	// Types that are valid to be assigned to Vmm:
	//
	//	*Vm_Crosvm
	//	*Vm_Gem5
	//	*Vm_Qemu
	Vmm           isVm_Vmm        `protobuf_oneof:"vmm"`
	CustomActions []*CustomAction `protobuf:"bytes,9,rep,name=custom_actions,json=customActions,proto3" json:"custom_actions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vm) Reset() {
	*x = Vm{}
	mi := &file_load_config_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vm) ProtoMessage() {}

func (x *Vm) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vm.ProtoReflect.Descriptor instead.
func (*Vm) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{14}
}

func (x *Vm) GetCpus() uint32 {
	if x != nil && x.Cpus != nil {
		return *x.Cpus
	}
	return 0
}

func (x *Vm) GetMemoryMb() uint32 {
	if x != nil && x.MemoryMb != nil {
		return *x.MemoryMb
	}
	return 0
}

func (x *Vm) GetUseSdcard() bool {
	if x != nil && x.UseSdcard != nil {
		return *x.UseSdcard
	}
	return false
}

func (x *Vm) GetSetupwizardMode() string {
	if x != nil && x.SetupwizardMode != nil {
		return *x.SetupwizardMode
	}
	return ""
}

func (x *Vm) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

func (x *Vm) GetVmm() isVm_Vmm {
	if x != nil {
		return x.Vmm
	}
	return nil
}

func (x *Vm) GetCrosvm() *Crosvm {
	if x != nil {
		if x, ok := x.Vmm.(*Vm_Crosvm); ok {
			return x.Crosvm
		}
	}
	return nil
}

func (x *Vm) GetGem5() *Gem5 {
	if x != nil {
		if x, ok := x.Vmm.(*Vm_Gem5); ok {
			return x.Gem5
		}
	}
	return nil
}

func (x *Vm) GetQemu() *Qemu {
	if x != nil {
		if x, ok := x.Vmm.(*Vm_Qemu); ok {
			return x.Qemu
		}
	}
	return nil
}

func (x *Vm) GetCustomActions() []*CustomAction {
	if x != nil {
		return x.CustomActions
	}
	return nil
}

type isVm_Vmm interface {
	isVm_Vmm()
}

type Vm_Crosvm struct {
	Crosvm *Crosvm `protobuf:"bytes,6,opt,name=crosvm,proto3,oneof"`
}

type Vm_Gem5 struct {
	Gem5 *Gem5 `protobuf:"bytes,7,opt,name=gem5,proto3,oneof"`
}

type Vm_Qemu struct {
	Qemu *Qemu `protobuf:"bytes,8,opt,name=qemu,proto3,oneof"`
}

func (*Vm_Crosvm) isVm_Vmm() {}

func (*Vm_Gem5) isVm_Vmm() {}

func (*Vm_Qemu) isVm_Vmm() {}

type Crosvm struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	EnableSandbox     *bool                  `protobuf:"varint,1,opt,name=enable_sandbox,json=enableSandbox,proto3,oneof" json:"enable_sandbox,omitempty"`
	SimpleMediaDevice *bool                  `protobuf:"varint,2,opt,name=simple_media_device,json=simpleMediaDevice,proto3,oneof" json:"simple_media_device,omitempty"`
	V4L2Proxy         *string                `protobuf:"bytes,3,opt,name=v4l2_proxy,json=v4l2Proxy,proto3,oneof" json:"v4l2_proxy,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Crosvm) Reset() {
	*x = Crosvm{}
	mi := &file_load_config_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Crosvm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Crosvm) ProtoMessage() {}

func (x *Crosvm) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Crosvm.ProtoReflect.Descriptor instead.
func (*Crosvm) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{15}
}

func (x *Crosvm) GetEnableSandbox() bool {
	if x != nil && x.EnableSandbox != nil {
		return *x.EnableSandbox
	}
	return false
}

func (x *Crosvm) GetSimpleMediaDevice() bool {
	if x != nil && x.SimpleMediaDevice != nil {
		return *x.SimpleMediaDevice
	}
	return false
}

func (x *Crosvm) GetV4L2Proxy() string {
	if x != nil && x.V4L2Proxy != nil {
		return *x.V4L2Proxy
	}
	return ""
}

type Gem5 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Gem5) Reset() {
	*x = Gem5{}
	mi := &file_load_config_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Gem5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gem5) ProtoMessage() {}

func (x *Gem5) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gem5.ProtoReflect.Descriptor instead.
func (*Gem5) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{16}
}

type Qemu struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Qemu) Reset() {
	*x = Qemu{}
	mi := &file_load_config_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Qemu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qemu) ProtoMessage() {}

func (x *Qemu) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qemu.ProtoReflect.Descriptor instead.
func (*Qemu) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{17}
}

type CustomAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShellCommand  *string                `protobuf:"bytes,1,opt,name=shell_command,json=shellCommand,proto3,oneof" json:"shell_command,omitempty"`
	Button        *Button                `protobuf:"bytes,2,opt,name=button,proto3,oneof" json:"button,omitempty"`
	Server        *string                `protobuf:"bytes,3,opt,name=server,proto3,oneof" json:"server,omitempty"`
	Buttons       []*Button              `protobuf:"bytes,4,rep,name=buttons,proto3" json:"buttons,omitempty"`
	DeviceStates  []*DeviceState         `protobuf:"bytes,5,rep,name=device_states,json=deviceStates,proto3" json:"device_states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomAction) Reset() {
	*x = CustomAction{}
	mi := &file_load_config_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomAction) ProtoMessage() {}

func (x *CustomAction) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomAction.ProtoReflect.Descriptor instead.
func (*CustomAction) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{18}
}

func (x *CustomAction) GetShellCommand() string {
	if x != nil && x.ShellCommand != nil {
		return *x.ShellCommand
	}
	return ""
}

func (x *CustomAction) GetButton() *Button {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *CustomAction) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

func (x *CustomAction) GetButtons() []*Button {
	if x != nil {
		return x.Buttons
	}
	return nil
}

func (x *CustomAction) GetDeviceStates() []*DeviceState {
	if x != nil {
		return x.DeviceStates
	}
	return nil
}

type Button struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       *string                `protobuf:"bytes,1,opt,name=command,proto3,oneof" json:"command,omitempty"`
	Title         *string                `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	IconName      *string                `protobuf:"bytes,3,opt,name=icon_name,json=iconName,proto3,oneof" json:"icon_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Button) Reset() {
	*x = Button{}
	mi := &file_load_config_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Button) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Button) ProtoMessage() {}

func (x *Button) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Button.ProtoReflect.Descriptor instead.
func (*Button) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{19}
}

func (x *Button) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *Button) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Button) GetIconName() string {
	if x != nil && x.IconName != nil {
		return *x.IconName
	}
	return ""
}

type DeviceState struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	LidSwitchOpen   *bool                  `protobuf:"varint,1,opt,name=lid_switch_open,json=lidSwitchOpen,proto3,oneof" json:"lid_switch_open,omitempty"`
	HingeAngleValue *int32                 `protobuf:"varint,2,opt,name=hinge_angle_value,json=hingeAngleValue,proto3,oneof" json:"hinge_angle_value,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeviceState) Reset() {
	*x = DeviceState{}
	mi := &file_load_config_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceState) ProtoMessage() {}

func (x *DeviceState) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceState.ProtoReflect.Descriptor instead.
func (*DeviceState) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{20}
}

func (x *DeviceState) GetLidSwitchOpen() bool {
	if x != nil && x.LidSwitchOpen != nil {
		return *x.LidSwitchOpen
	}
	return false
}

func (x *DeviceState) GetHingeAngleValue() int32 {
	if x != nil && x.HingeAngleValue != nil {
		return *x.HingeAngleValue
	}
	return 0
}

type Metrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enable        *bool                  `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	mi := &file_load_config_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{21}
}

func (x *Metrics) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

type DisplayOverlay struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VmIndex       int32                  `protobuf:"varint,1,opt,name=vm_index,json=vmIndex,proto3" json:"vm_index,omitempty"`
	DisplayIndex  int32                  `protobuf:"varint,2,opt,name=display_index,json=displayIndex,proto3" json:"display_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayOverlay) Reset() {
	*x = DisplayOverlay{}
	mi := &file_load_config_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayOverlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayOverlay) ProtoMessage() {}

func (x *DisplayOverlay) ProtoReflect() protoreflect.Message {
	mi := &file_load_config_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayOverlay.ProtoReflect.Descriptor instead.
func (*DisplayOverlay) Descriptor() ([]byte, []int) {
	return file_load_config_proto_rawDescGZIP(), []int{22}
}

func (x *DisplayOverlay) GetVmIndex() int32 {
	if x != nil {
		return x.VmIndex
	}
	return 0
}

func (x *DisplayOverlay) GetDisplayIndex() int32 {
	if x != nil {
		return x.DisplayIndex
	}
	return 0
}

var File_load_config_proto protoreflect.FileDescriptor

const file_load_config_proto_rawDesc = "" +
	"\n" +
	"\x11load_config.proto\x12\x15cuttlefish.cvd.config\"\x91\x03\n" +
	"\x18EnvironmentSpecification\x12=\n" +
	"\tinstances\x18\x01 \x03(\v2\x1f.cuttlefish.cvd.config.InstanceR\tinstances\x127\n" +
	"\x05fetch\x18\x02 \x01(\v2\x1c.cuttlefish.cvd.config.FetchH\x00R\x05fetch\x88\x01\x01\x12=\n" +
	"\ametrics\x18\x03 \x01(\v2\x1e.cuttlefish.cvd.config.MetricsH\x01R\ametrics\x88\x01\x01\x12:\n" +
	"\x06common\x18\x04 \x01(\v2\x1d.cuttlefish.cvd.config.CommonH\x02R\x06common\x88\x01\x01\x12 \n" +
	"\tnetsim_bt\x18\x05 \x01(\bH\x03R\bnetsimBt\x88\x01\x01\x12\"\n" +
	"\n" +
	"netsim_uwb\x18\x06 \x01(\bH\x04R\tnetsimUwb\x88\x01\x01B\b\n" +
	"\x06_fetchB\n" +
	"\n" +
	"\b_metricsB\t\n" +
	"\a_commonB\f\n" +
	"\n" +
	"_netsim_btB\r\n" +
	"\v_netsim_uwb\"t\n" +
	"\x06Common\x12\"\n" +
	"\n" +
	"group_name\x18\x01 \x01(\tH\x00R\tgroupName\x88\x01\x01\x12&\n" +
	"\fhost_package\x18\x02 \x01(\tH\x01R\vhostPackage\x88\x01\x01B\r\n" +
	"\v_group_nameB\x0f\n" +
	"\r_host_package\"\x9f\x03\n" +
	"\x05Fetch\x12\x1c\n" +
	"\aapi_key\x18\x01 \x01(\tH\x00R\x06apiKey\x88\x01\x01\x120\n" +
	"\x11credential_source\x18\x02 \x01(\tH\x01R\x10credentialSource\x88\x01\x01\x129\n" +
	"\x19wait_retry_period_seconds\x18\x03 \x01(\rH\x02R\x11wait_retry_period\x88\x01\x01\x12=\n" +
	"\x18keep_downloaded_archives\x18\x05 \x01(\bH\x03R\x16keepDownloadedArchives\x88\x01\x01\x12%\n" +
	"\fapi_base_url\x18\x06 \x01(\tH\x04R\n" +
	"apiBaseUrl\x88\x01\x01\x12\"\n" +
	"\n" +
	"project_id\x18\a \x01(\tH\x05R\tprojectId\x88\x01\x01B\n" +
	"\n" +
	"\b_api_keyB\x14\n" +
	"\x12_credential_sourceB\x1c\n" +
	"\x1a_wait_retry_period_secondsB\x1b\n" +
	"\x19_keep_downloaded_archivesB\x0f\n" +
	"\r_api_base_urlB\r\n" +
	"\v_project_idJ\x04\b\x04\x10\x05\"\xec\x04\n" +
	"\bInstance\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12.\n" +
	"\x02vm\x18\x02 \x01(\v2\x19.cuttlefish.cvd.config.VmH\x01R\x02vm\x88\x01\x01\x124\n" +
	"\x04boot\x18\x03 \x01(\v2\x1b.cuttlefish.cvd.config.BootH\x02R\x04boot\x88\x01\x01\x12@\n" +
	"\bsecurity\x18\x04 \x01(\v2\x1f.cuttlefish.cvd.config.SecurityH\x03R\bsecurity\x88\x01\x01\x124\n" +
	"\x04disk\x18\x05 \x01(\v2\x1b.cuttlefish.cvd.config.DiskH\x04R\x04disk\x88\x01\x01\x12@\n" +
	"\bgraphics\x18\x06 \x01(\v2\x1f.cuttlefish.cvd.config.GraphicsH\x05R\bgraphics\x88\x01\x01\x12C\n" +
	"\tstreaming\x18\a \x01(\v2 .cuttlefish.cvd.config.StreamingH\x06R\tstreaming\x88\x01\x01\x12L\n" +
	"\fconnectivity\x18\b \x01(\v2#.cuttlefish.cvd.config.ConnectivityH\aR\fconnectivity\x88\x01\x01\x12%\n" +
	"\x0fimport_template\x18\t \x01(\tH\bR\a@import\x88\x01\x01B\a\n" +
	"\x05_nameB\x05\n" +
	"\x03_vmB\a\n" +
	"\x05_bootB\v\n" +
	"\t_securityB\a\n" +
	"\x05_diskB\v\n" +
	"\t_graphicsB\f\n" +
	"\n" +
	"_streamingB\x0f\n" +
	"\r_connectivityB\x12\n" +
	"\x10_import_template\"\xe7\x02\n" +
	"\x04Boot\x129\n" +
	"\x06kernel\x18\x01 \x01(\v2\x1c.cuttlefish.cvd.config.BuildH\x00R\x06kernel\x88\x01\x01\x126\n" +
	"\x14enable_bootanimation\x18\x02 \x01(\bH\x01R\x13enableBootanimation\x88\x01\x01\x127\n" +
	"\x15extra_bootconfig_args\x18\x03 \x01(\tH\x02R\x13extraBootconfigArgs\x88\x01\x01\x12\x19\n" +
	"\x05build\x18\x04 \x01(\tH\x03R\x05build\x88\x01\x01\x12A\n" +
	"\n" +
	"bootloader\x18\x05 \x01(\v2\x1c.cuttlefish.cvd.config.BuildH\x04R\n" +
	"bootloader\x88\x01\x01B\t\n" +
	"\a_kernelB\x17\n" +
	"\x15_enable_bootanimationB\x18\n" +
	"\x16_extra_bootconfig_argsB\b\n" +
	"\x06_buildB\r\n" +
	"\v_bootloader\",\n" +
	"\x05Build\x12\x19\n" +
	"\x05build\x18\x01 \x01(\tH\x00R\x05build\x88\x01\x01B\b\n" +
	"\x06_build\"Q\n" +
	"\fConnectivity\x127\n" +
	"\x05vsock\x18\x01 \x01(\v2\x1c.cuttlefish.cvd.config.VsockH\x00R\x05vsock\x88\x01\x01B\b\n" +
	"\x06_vsock\"=\n" +
	"\x05Vsock\x12$\n" +
	"\vguest_group\x18\x01 \x01(\tH\x00R\n" +
	"guestGroup\x88\x01\x01B\x0e\n" +
	"\f_guest_group\"\xaf\x01\n" +
	"\bGraphics\x12:\n" +
	"\bdisplays\x18\x01 \x03(\v2\x1e.cuttlefish.cvd.config.DisplayR\bdisplays\x12(\n" +
	"\rrecord_screen\x18\x02 \x01(\bH\x00R\frecordScreen\x88\x01\x01\x12\x1e\n" +
	"\bgpu_mode\x18\x03 \x01(\tH\x01R\agpuMode\x88\x01\x01B\x10\n" +
	"\x0e_record_screenB\v\n" +
	"\t_gpu_mode\"\x82\x02\n" +
	"\aDisplay\x12\x19\n" +
	"\x05width\x18\x01 \x01(\rH\x00R\x05width\x88\x01\x01\x12\x1b\n" +
	"\x06height\x18\x02 \x01(\rH\x01R\x06height\x88\x01\x01\x12\x15\n" +
	"\x03dpi\x18\x03 \x01(\rH\x02R\x03dpi\x88\x01\x01\x121\n" +
	"\x12refresh_rate_hertz\x18\x04 \x01(\rH\x03R\x10refreshRateHertz\x88\x01\x01\x12A\n" +
	"\boverlays\x18\x05 \x03(\v2%.cuttlefish.cvd.config.DisplayOverlayR\boverlaysB\b\n" +
	"\x06_widthB\t\n" +
	"\a_heightB\x06\n" +
	"\x04_dpiB\x15\n" +
	"\x13_refresh_rate_hertz\"\xb5\x03\n" +
	"\x04Disk\x12(\n" +
	"\rdefault_build\x18\x01 \x01(\tH\x00R\fdefaultBuild\x88\x01\x01\x12A\n" +
	"\x0fsuper_partition\x18\x02 \x01(\v2\x1c.cuttlefish.cvd.config.SuperH\x01R\x05super\x88\x01\x01\x12-\n" +
	"\x10download_img_zip\x18\x03 \x01(\bH\x02R\x0edownloadImgZip\x88\x01\x01\x12>\n" +
	"\x19download_target_files_zip\x18\x04 \x01(\bH\x03R\x16downloadTargetFilesZip\x88\x01\x01\x122\n" +
	"\x13blank_data_image_mb\x18\x05 \x01(\rH\x04R\x10blankDataImageMb\x88\x01\x01\x12\x1f\n" +
	"\botatools\x18\x06 \x01(\tH\x05R\botatools\x88\x01\x01B\x10\n" +
	"\x0e_default_buildB\x12\n" +
	"\x10_super_partitionB\x13\n" +
	"\x11_download_img_zipB\x1c\n" +
	"\x1a_download_target_files_zipB\x16\n" +
	"\x14_blank_data_image_mbB\v\n" +
	"\t_otatools\"/\n" +
	"\x05Super\x12\x1b\n" +
	"\x06system\x18\x01 \x01(\tH\x00R\x06system\x88\x01\x01B\t\n" +
	"\a_system\"\xe3\x01\n" +
	"\bSecurity\x12(\n" +
	"\rserial_number\x18\x01 \x01(\tH\x00R\fserialNumber\x88\x01\x01\x12/\n" +
	"\x11use_random_serial\x18\x02 \x01(\bH\x01R\x0fuseRandomSerial\x88\x01\x01\x129\n" +
	"\x16guest_enforce_security\x18\x03 \x01(\bH\x02R\x14guestEnforceSecurity\x88\x01\x01B\x10\n" +
	"\x0e_serial_numberB\x14\n" +
	"\x12_use_random_serialB\x19\n" +
	"\x17_guest_enforce_security\";\n" +
	"\tStreaming\x12 \n" +
	"\tdevice_id\x18\x01 \x01(\tH\x00R\bdeviceId\x88\x01\x01B\f\n" +
	"\n" +
	"_device_id\"\xe2\x03\n" +
	"\x02Vm\x12\x17\n" +
	"\x04cpus\x18\x01 \x01(\rH\x01R\x04cpus\x88\x01\x01\x12 \n" +
	"\tmemory_mb\x18\x02 \x01(\rH\x02R\bmemoryMb\x88\x01\x01\x12\"\n" +
	"\n" +
	"use_sdcard\x18\x03 \x01(\bH\x03R\tuseSdcard\x88\x01\x01\x12.\n" +
	"\x10setupwizard_mode\x18\x04 \x01(\tH\x04R\x0fsetupwizardMode\x88\x01\x01\x12\x17\n" +
	"\x04uuid\x18\x05 \x01(\tH\x05R\x04uuid\x88\x01\x01\x127\n" +
	"\x06crosvm\x18\x06 \x01(\v2\x1d.cuttlefish.cvd.config.CrosvmH\x00R\x06crosvm\x121\n" +
	"\x04gem5\x18\a \x01(\v2\x1b.cuttlefish.cvd.config.Gem5H\x00R\x04gem5\x121\n" +
	"\x04qemu\x18\b \x01(\v2\x1b.cuttlefish.cvd.config.QemuH\x00R\x04qemu\x12J\n" +
	"\x0ecustom_actions\x18\t \x03(\v2#.cuttlefish.cvd.config.CustomActionR\rcustomActionsB\x05\n" +
	"\x03vmmB\a\n" +
	"\x05_cpusB\f\n" +
	"\n" +
	"_memory_mbB\r\n" +
	"\v_use_sdcardB\x13\n" +
	"\x11_setupwizard_modeB\a\n" +
	"\x05_uuid\"\xc7\x01\n" +
	"\x06Crosvm\x12*\n" +
	"\x0eenable_sandbox\x18\x01 \x01(\bH\x00R\renableSandbox\x88\x01\x01\x123\n" +
	"\x13simple_media_device\x18\x02 \x01(\bH\x01R\x11simpleMediaDevice\x88\x01\x01\x12\"\n" +
	"\n" +
	"v4l2_proxy\x18\x03 \x01(\tH\x02R\tv4l2Proxy\x88\x01\x01B\x11\n" +
	"\x0f_enable_sandboxB\x16\n" +
	"\x14_simple_media_deviceB\r\n" +
	"\v_v4l2_proxy\"\x06\n" +
	"\x04Gem5\"\x06\n" +
	"\x04Qemu\"\xbb\x02\n" +
	"\fCustomAction\x12(\n" +
	"\rshell_command\x18\x01 \x01(\tH\x00R\fshellCommand\x88\x01\x01\x12:\n" +
	"\x06button\x18\x02 \x01(\v2\x1d.cuttlefish.cvd.config.ButtonH\x01R\x06button\x88\x01\x01\x12\x1b\n" +
	"\x06server\x18\x03 \x01(\tH\x02R\x06server\x88\x01\x01\x127\n" +
	"\abuttons\x18\x04 \x03(\v2\x1d.cuttlefish.cvd.config.ButtonR\abuttons\x12G\n" +
	"\rdevice_states\x18\x05 \x03(\v2\".cuttlefish.cvd.config.DeviceStateR\fdeviceStatesB\x10\n" +
	"\x0e_shell_commandB\t\n" +
	"\a_buttonB\t\n" +
	"\a_server\"\x88\x01\n" +
	"\x06Button\x12\x1d\n" +
	"\acommand\x18\x01 \x01(\tH\x00R\acommand\x88\x01\x01\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tH\x01R\x05title\x88\x01\x01\x12 \n" +
	"\ticon_name\x18\x03 \x01(\tH\x02R\biconName\x88\x01\x01B\n" +
	"\n" +
	"\b_commandB\b\n" +
	"\x06_titleB\f\n" +
	"\n" +
	"_icon_name\"\x95\x01\n" +
	"\vDeviceState\x12+\n" +
	"\x0flid_switch_open\x18\x01 \x01(\bH\x00R\rlidSwitchOpen\x88\x01\x01\x12/\n" +
	"\x11hinge_angle_value\x18\x02 \x01(\x05H\x01R\x0fhingeAngleValue\x88\x01\x01B\x12\n" +
	"\x10_lid_switch_openB\x14\n" +
	"\x12_hinge_angle_value\"1\n" +
	"\aMetrics\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01B\t\n" +
	"\a_enable\"P\n" +
	"\x0eDisplayOverlay\x12\x19\n" +
	"\bvm_index\x18\x01 \x01(\x05R\avmIndex\x12#\n" +
	"\rdisplay_index\x18\x02 \x01(\x05R\fdisplayIndexB8Z6github.com/google/cloud-android-orchestration/pkg/cli/b\x06proto3"

var (
	file_load_config_proto_rawDescOnce sync.Once
	file_load_config_proto_rawDescData []byte
)

func file_load_config_proto_rawDescGZIP() []byte {
	file_load_config_proto_rawDescOnce.Do(func() {
		file_load_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_load_config_proto_rawDesc), len(file_load_config_proto_rawDesc)))
	})
	return file_load_config_proto_rawDescData
}

var file_load_config_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_load_config_proto_goTypes = []any{
	(*EnvironmentSpecification)(nil), // 0: cuttlefish.cvd.config.EnvironmentSpecification
	(*Common)(nil),                   // 1: cuttlefish.cvd.config.Common
	(*Fetch)(nil),                    // 2: cuttlefish.cvd.config.Fetch
	(*Instance)(nil),                 // 3: cuttlefish.cvd.config.Instance
	(*Boot)(nil),                     // 4: cuttlefish.cvd.config.Boot
	(*Build)(nil),                    // 5: cuttlefish.cvd.config.Build
	(*Connectivity)(nil),             // 6: cuttlefish.cvd.config.Connectivity
	(*Vsock)(nil),                    // 7: cuttlefish.cvd.config.Vsock
	(*Graphics)(nil),                 // 8: cuttlefish.cvd.config.Graphics
	(*Display)(nil),                  // 9: cuttlefish.cvd.config.Display
	(*Disk)(nil),                     // 10: cuttlefish.cvd.config.Disk
	(*Super)(nil),                    // 11: cuttlefish.cvd.config.Super
	(*Security)(nil),                 // 12: cuttlefish.cvd.config.Security
	(*Streaming)(nil),                // 13: cuttlefish.cvd.config.Streaming
	(*Vm)(nil),                       // 14: cuttlefish.cvd.config.Vm
	(*Crosvm)(nil),                   // 15: cuttlefish.cvd.config.Crosvm
	(*Gem5)(nil),                     // 16: cuttlefish.cvd.config.Gem5
	(*Qemu)(nil),                     // 17: cuttlefish.cvd.config.Qemu
	(*CustomAction)(nil),             // 18: cuttlefish.cvd.config.CustomAction
	(*Button)(nil),                   // 19: cuttlefish.cvd.config.Button
	(*DeviceState)(nil),              // 20: cuttlefish.cvd.config.DeviceState
	(*Metrics)(nil),                  // 21: cuttlefish.cvd.config.Metrics
	(*DisplayOverlay)(nil),           // 22: cuttlefish.cvd.config.DisplayOverlay
}
var file_load_config_proto_depIdxs = []int32{
	3,  // 0: cuttlefish.cvd.config.EnvironmentSpecification.instances:type_name -> cuttlefish.cvd.config.Instance
	2,  // 1: cuttlefish.cvd.config.EnvironmentSpecification.fetch:type_name -> cuttlefish.cvd.config.Fetch
	21, // 2: cuttlefish.cvd.config.EnvironmentSpecification.metrics:type_name -> cuttlefish.cvd.config.Metrics
	1,  // 3: cuttlefish.cvd.config.EnvironmentSpecification.common:type_name -> cuttlefish.cvd.config.Common
	14, // 4: cuttlefish.cvd.config.Instance.vm:type_name -> cuttlefish.cvd.config.Vm
	4,  // 5: cuttlefish.cvd.config.Instance.boot:type_name -> cuttlefish.cvd.config.Boot
	12, // 6: cuttlefish.cvd.config.Instance.security:type_name -> cuttlefish.cvd.config.Security
	10, // 7: cuttlefish.cvd.config.Instance.disk:type_name -> cuttlefish.cvd.config.Disk
	8,  // 8: cuttlefish.cvd.config.Instance.graphics:type_name -> cuttlefish.cvd.config.Graphics
	13, // 9: cuttlefish.cvd.config.Instance.streaming:type_name -> cuttlefish.cvd.config.Streaming
	6,  // 10: cuttlefish.cvd.config.Instance.connectivity:type_name -> cuttlefish.cvd.config.Connectivity
	5,  // 11: cuttlefish.cvd.config.Boot.kernel:type_name -> cuttlefish.cvd.config.Build
	5,  // 12: cuttlefish.cvd.config.Boot.bootloader:type_name -> cuttlefish.cvd.config.Build
	7,  // 13: cuttlefish.cvd.config.Connectivity.vsock:type_name -> cuttlefish.cvd.config.Vsock
	9,  // 14: cuttlefish.cvd.config.Graphics.displays:type_name -> cuttlefish.cvd.config.Display
	22, // 15: cuttlefish.cvd.config.Display.overlays:type_name -> cuttlefish.cvd.config.DisplayOverlay
	11, // 16: cuttlefish.cvd.config.Disk.super_partition:type_name -> cuttlefish.cvd.config.Super
	15, // 17: cuttlefish.cvd.config.Vm.crosvm:type_name -> cuttlefish.cvd.config.Crosvm
	16, // 18: cuttlefish.cvd.config.Vm.gem5:type_name -> cuttlefish.cvd.config.Gem5
	17, // 19: cuttlefish.cvd.config.Vm.qemu:type_name -> cuttlefish.cvd.config.Qemu
	18, // 20: cuttlefish.cvd.config.Vm.custom_actions:type_name -> cuttlefish.cvd.config.CustomAction
	19, // 21: cuttlefish.cvd.config.CustomAction.button:type_name -> cuttlefish.cvd.config.Button
	19, // 22: cuttlefish.cvd.config.CustomAction.buttons:type_name -> cuttlefish.cvd.config.Button
	20, // 23: cuttlefish.cvd.config.CustomAction.device_states:type_name -> cuttlefish.cvd.config.DeviceState
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_load_config_proto_init() }
func file_load_config_proto_init() {
	if File_load_config_proto != nil {
		return
	}
	file_load_config_proto_msgTypes[0].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[1].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[2].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[3].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[4].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[5].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[6].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[7].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[8].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[9].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[10].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[11].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[12].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[13].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[14].OneofWrappers = []any{
		(*Vm_Crosvm)(nil),
		(*Vm_Gem5)(nil),
		(*Vm_Qemu)(nil),
	}
	file_load_config_proto_msgTypes[15].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[18].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[19].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[20].OneofWrappers = []any{}
	file_load_config_proto_msgTypes[21].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_load_config_proto_rawDesc), len(file_load_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_load_config_proto_goTypes,
		DependencyIndexes: file_load_config_proto_depIdxs,
		MessageInfos:      file_load_config_proto_msgTypes,
	}.Build()
	File_load_config_proto = out.File
	file_load_config_proto_goTypes = nil
	file_load_config_proto_depIdxs = nil
}
